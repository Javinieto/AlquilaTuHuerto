security:
  encoders:
    App\Entity\User:
      algorithm: auto
  # ðŸ‘‡ Proveedor de la clase Usuario
  providers:
    entity_provider:
      entity:
        class: App\Entity\User
        # ðŸ‘‡ Valor identificador Ãºnico
        property: username

  role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

  firewalls:
    #        dev:
    #            pattern: ^/(_(profiler|wdt)|css|images|js)/
    #            security: false
    login:
      pattern: ^/login
      stateless: true
      anonymous: true
      json_login:
        check_path: /login_check
        success_handler: lexik_jwt_authentication.handler.authentication_success
        failure_handler: lexik_jwt_authentication.handler.authentication_failure

    register:
      pattern: ^/register
      stateless: true
      anonymous: true

    api:
      pattern: ^/api/v1
      stateless: true
      anonymous: false
      provider: entity_provider
      guard:
        authenticators:
          - lexik_jwt_authentication.jwt_token_authenticator

  access_control:
    - { path: ^/login, role: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: ^/huertos/([0-9]+), role: IS_FULLY_AUTHENTICATED }
        #- { path: ^/huertos/([0-9]+)/newzs, role: [ROLE_EMPLOYEER] }
    - { path: ^/huertos, role: IS_AUTHENTICATED_ANONYMOUSLY }
